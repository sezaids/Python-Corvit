git clone <-some link->
    clone - cloning a repository on our local machine


git status
    status - displays the state of the code
        untracked  -> new files that git doesn't yet track
        modified   -> changed
        staged     -> file is ready to be committed
        unmodified -> unchanged


git add <-file name->
    add - Adds new or changed files in your working directory to the Git staging area


git commit -m "some message"
    commit - it is the record of change


git push origin main
    push - upload local repo content to remote repo


Init Command
    git init
        to initialize a new Git repository
    git remote add origin <-link->
        to add a remote repository to your local Git repository
    git remote -v
        (to verify remote)
    git branch
        (to check branch)
    git branch -M main
        (to rename branch)
    git push origin main 
        used to push changes from your local repository to a remote repository
init - used to create a new git repo


WORKFLOW
    Local Git:
        Github repo > clone > changes > add > commit > push


Branch Command
    git branch
        (to check branch)
    git branch -M main
        (to rename branch)
    git checkout <-branch name>
        (to navigate)
    git checkout -b <-new branch name->
        (to create new branch)
    git branch -d <-branch name->
        (to delete branch)


Merging code
    Way 1:
        git diff <-branch name->
            (to compare commits, branches, files & more)
        git merge <-branch name->
            (to merge 2 branches)
    Way 2:
        Create a PR (Pull Request)
            Pull Request means : It lets you tell others about changes you've pushed to a branch in a repository on GitHub


Pull Command
    git pull origin main
        used to fetch and download content from a remote repo and immediately update the local repo to match that content


Resolving Merge Conflicts
    An events that takes place when Git is unable to automatically resolve differences in code between two commits


Undoing changes
    Case 1: Staged changes
        git reset <-file name->
            (for one file)
        git reset
            (for multiple file)

    Case 2: commited changes (for one commit)
        git reset HEAD~1

    Case 3: commited changes (for many commits)
        git reset <-commit hash->
        git reset --hard <-commit hash->


git log
    to check history of file


Fork
    A fork is a new repository that shares code and visibility settings with the original "upstream" repository.
    Fork is a rough copy.



--- OTHER COMMAND USED IN TERMINAL
mkdir
    to create new directories (folders) in a file system
cd <-file name->
    to navigate the file system by changing the current working directory to a different location
cd ..
    to navigate up one level in the directory hierarchy, moving you from the current directory to its parent directory
ls
    displays the files and directories within a specified directory